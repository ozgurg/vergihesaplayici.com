---
import DefaultLayout from "@/layouts/default-layout.astro";
import PageHeader from "@/components/common/page-header.vue";
import Container from "@/components/common/container.vue";
import Breadcrumbs from "@/components/common/breadcrumbs.vue";
import Heading1 from "@/components/common/heading-1.vue";
import ArticleLegalDisclaimerAlert from "@/components/article-legal-disclaimer-alert.vue";
import RichText from "@/components/common/rich-text.vue";
import Heading2 from "@/components/common/heading-2.vue";
import Heading3 from "@/components/common/heading-3.vue";
import ArticlesGrid from "@/components/articles-grid.vue";

import { render } from "astro:content";
import { YazilarPageDef, YazilarSlugPageDef } from "@/domains/yazilar/page-def.js";
import { getYazilar } from "@/domains/yazilar/db.js";
import { mapYazilarForArticlesGridComponent } from "@/domains/yazilar/utils.js";

export const getStaticPaths = async (): Promise<object> => {
    return (await getYazilar()).map(_yazi => ({
        params: {
            articleSlug: _yazi.slug
        },
        props: {
            yazi: _yazi
        }
    }));
};

const { yazi } = Astro.props;

const yazilarPage = YazilarPageDef();
const yazilarSlugPage = YazilarSlugPageDef({ yazi });

// oxlint-disable-next-line no-magic-numbers
const yazilar = (await getYazilar()).filter(_yazi => _yazi.slug !== yazi.slug).slice(0, 6);
const yazilarForArticlesGrid = mapYazilarForArticlesGridComponent(yazilar);

const { Content } = await render(yazi.entry);

const date = yazi.date;
const timeDateTimeAttr = date.toISOString().split("T")[0]; // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time#valid_datetime_values
const timeContentAttr = date.toISOString(); // https://developers.google.com/search/docs/appearance/structured-data/article#article-types
const readableDate = date.toLocaleDateString("tr-TR");

const parseTitleAsTaxInfo = (title: string): { name: string, code: string } | false => {
    const pattern = /^(.*?)\s*\[([^\]]+)]\s*$/;
    const matchArray = title.match(pattern);
    if (matchArray) {
        const name = matchArray[1]?.trim() ?? null;
        const code = matchArray[2]?.trim() ?? null;
        if (name && code) {
            return { name, code };
        }
    }
    return false;
};

const taxInfo = parseTitleAsTaxInfo(yazi.title);
---

<DefaultLayout head={yazilarSlugPage.head}>
    <PageHeader>
        <Container>
            <Breadcrumbs
                items={yazilarSlugPage.breadcrumbs}
                client:load />
            <Heading1>
                {yazi.title}
            </Heading1>
            <div>
                Yay覺nlanma tarihi: <time datetime={timeDateTimeAttr} content={timeContentAttr} class="meta-date">{readableDate}</time>
            </div>
        </Container>
    </PageHeader>

    <Container>
        <div ta-ad-container=""></div>
        <hr />

        <ArticleLegalDisclaimerAlert />

        <RichText is="section">
            {taxInfo ?
                <Heading3 is="span">Vergi ad覺 ve kodu</Heading3>
                <table>
                    <tbody>
                        <tr>
                            <td>Vergi ad覺</td>
                            <td>{taxInfo.name}</td>
                        </tr>
                        <tr>
                            <td>Vergi kodu</td>
                            <td class="text-number">{taxInfo.code}</td>
                        </tr>
                    </tbody>
                </table>
                <hr />
                : ""}
            <Content />
        </RichText>

        <hr />
        <div ta-ad-container=""></div>
        <hr />

        <section>
            <Heading2>
                <a href={yazilarPage.url}>
                    Son yaz覺lar
                </a>
            </Heading2>
            <ArticlesGrid items={yazilarForArticlesGrid} />
            <hr />
            <div ta-ad-container=""></div>
        </section>
    </Container>
</DefaultLayout>
