---
import type { Thumb } from "@/utils/thumb-loader.js";
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";
import SvgIcon from "@/components/common/svg-icon.vue";
import { icon_chevronRight } from "@/utils/icons.js";

export type Props = {
    thumb: Thumb;
    title: string;
    brandTitle: string;
    releaseYear: number;
    url: URL;
    loading: HTMLAttributes<"img">["loading"];
}

const props = Astro.props;

const STYLE = {
    "--color-h": `${props.thumb.color.hsl.h}deg`,
    "--color-s": `${props.thumb.color.hsl.s}%`,
    "--color-l": `${props.thumb.color.hsl.l}%`
};

const FULL_TITLE = `${props.brandTitle} ${props.title}`;
const IMG_ALT = FULL_TITLE;
---

<div
    style={STYLE}
    class="calculator-preset-carousel-item">
    <Image
        src={props.thumb.metadata}
        alt={IMG_ALT}
        loading={props.loading}
        height="96"
        class="thumb"
        densities={[1, 2]}
        decoding="async"
        aria-hidden="true"
        draggable="false" />
    <h2 class="title">
        <a
            href={props.url}
            aria-label={FULL_TITLE}
            class="stretched-link">
            <span aria-hidden="true">{props.title}</span>
        </a>
        <SvgIcon icon={icon_chevronRight} />
    </h2>
    <div
        class="summary"
        aria-hidden="true">
        {props.brandTitle} â€¢ {props.releaseYear}
    </div>
</div>

<style lang="scss" is:global>
    .calculator-preset-carousel-item {
        @include vh-card($hover: true, $active: true);
        --color-hsl: var(--_color-hsl);
        --border-hsl: var(--_color-h), 100%, 96%;
        --border-alpha: .12;
        --border-radius: 1.75rem;

        --_color-h: var(--color-h);
        --_color-s: var(--color-s);
        --_color-l: var(--color-l);
        --_color-hsl: var(--_color-h), var(--_color-s), var(--_color-l);
        position: relative;
        color: hsl(var(--_color-h), 100%, 94%);
        background-image: radial-gradient(ellipse at left top, hsla(var(--_color-hsl), .24), transparent);
        display: flex;
        align-items: flex-start;
        flex-direction: column;
        padding-block: var(--vh-spacer) calc(var(--vh-spacer) * 1.125);
        padding-inline: calc(var(--vh-spacer) * .875);
        @include vh-media-breakpoint-up(md) {
            padding-block: var(--vh-spacer) calc(var(--vh-spacer) * 1.25);
            padding-inline: var(--vh-spacer)
        }
        &:has(a:focus-visible) {
            @include vh-focus-appearance()
        }
        .thumb {
            margin-block-end: var(--vh-spacer);
            @include vh-squircle(calc(var(--vh-spacer) * .75));
            padding: calc(var(--vh-spacer) * .375);
            background: hsl(var(--_color-h), var(--_color-s), 40%, .5);
            object-fit: contain;
            inline-size: auto;
            block-size: calc(var(--vh-spacer) * 5);
            max-inline-size: calc(var(--vh-spacer) * 5);
            @include vh-media-breakpoint-up(md) {
                block-size: calc(var(--vh-spacer) * 6);
                max-inline-size: calc(var(--vh-spacer) * 6)
            }
        }
        .title {
            --_icon-size: calc(var(--vh-spacer) * 1.25);
            display: flex;
            align-items: flex-end;
            flex-flow: row nowrap;
            margin-block-end: calc(var(--vh-spacer) * .25);
            gap: calc(var(--vh-spacer) * .125);
            a {
                text-wrap: pretty;
                font-weight: var(--vh-fw-bold);
                line-height: var(--vh-lh-lg);
                display: inline-block;
                max-inline-size: calc(100% - var(--_icon-size));
                @include vh-ellipsis-multiline(1);
                font-size: var(--vh-fs-sm);
                @include vh-media-breakpoint-up(md) {
                    font-size: var(--vh-fs-base)
                }
                &:focus {
                    @include vh-clear-focus-appearance()
                }
            }
            .svg-icon {
                --size: var(--_icon-size);
                opacity: .75;
                transform: translateY(-1px);
                @include vh-media-breakpoint-up(md) {
                    transform: translateY(-3px)
                }
            }
        }
        .summary {
            font-weight: var(--vh-fw-medium);
            line-height: var(--vh-lh-lg);
            opacity: .75;
            font-size: var(--vh-fs-xs)
        }
    }
</style>
